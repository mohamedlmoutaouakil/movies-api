openapi: 3.0.0
info:
  title: Movies service API
  description: Movies service is an API that provides access to a database of movies.
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local developement server

paths:
  /movies:
    get:
      summary: Return a list of all movies
      operationId: src.movies.read
      responses:
        '200': # status code
          description: A json array of movie objects
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
    post:
      summary: Add a new movie
      operationId: src.movies.add_movie
      requestBody:
        description: A movie JSON object
        required: true
        content:
          application/json:
            schema:
              x-body-name: movie # requestBody is passed in as ‘body’ by default, here I overrided the name of the parameter
              type: object
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          description: Movie added
  /movies/{movie_id}:
    get:
      summary: Return a movie by id.
      operationId: src.movies.get_movie
      parameters:
        - in: path
          name: movie_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The movie ID
      responses:
        '200': # movie found
          description: A movie json object
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Bad request. Movie ID must be an integer and larger than 0.
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A movie with the specified ID was not found.
        '5XX':
          description: Unexpected error.
    put:
      summary: Replace movie with id
      operationId: src.movies.replace_movie
      parameters:
        - in: path
          name: movie_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The movie ID
      requestBody:
        description: A movie JSON object
        required: true
        content:
          application/json:
            schema:
              x-body-name: movie
              type: object
              $ref: '#/components/schemas/Movie'
      responses:
        '200':
          description: Movie successfully replaced
        '404':
          description: A movie with the specified ID was not found.
    delete:
      summary: Delete movie with id
      operationId: src.movies.delete_movie
      parameters:
        - in: path
          name: movie_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The movie ID
      responses:
        '204':
          description: Movie was deleted
        '400':
          description: Bad request. Movie ID must be an integer and larger than 0.
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A movie with the specified ID was not found.
        '5XX':
          description: Unexpected error.


components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Fight Club'
        description:
          type: string
          example: 'Discontented with his capitalistic lifestyle, a white-collared insomniac forms an underground fight club with Tyler, a careless soap salesman. The project soon spirals down into something sinister.'
        duration: # duration of the movie in minutes
          type: integer
          example: 151
        poster:
          type: string
          example: 'https://m.media-amazon.com/images/M/MV5BMmEzNTkxYjQtZTc0MC00YTVjLTg5ZTEtZWMwOWVlYzY0NWIwXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg'
        rating:
          type: number
          example: 8.8
        year: 
          type: integer
          example: 1999
        genre:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
          example:
            - {
              id: 1,
              name: 'Action'
            }
        director:
          type: string
          example: 'David Fincher'
      required: # xxx properties are required
        - name
        - description
        - duration
        - poster
        - rating
        - year
        - genre 
    Genre:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
      